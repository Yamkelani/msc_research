function XTable = fitrnetConditionalConstraints1(XTable)
% Conditional constraints function for Regression NeuralNetwork model
%
%  Input:
%      XTable: A table of hyperparameter values to try during the Bayesian
%       optimization process. Each row corresponds to one point, and each
%       column corresponds to one hyperparameter.
%  Output:
%      XTable: A table of hyperparameter values to try during the Bayesian
%       optimization process. The values are adjusted according to the
%       constraint function rules.
%
% Conditional constraints enforce one of the following two conditions:
% 1. When some hyperparameters have certain values, other hyperparameters
% are set to given values.
%  2. When some hyperparameters have certain values, other hyperparameters
%  are set to NaN or, for categorical hyperparameters, <undefined> values.
%
% Refer to the documentation for more information on <a href="matlab:helpview('stats', 'bayesopt_conditional_constraints')">conditional
% constraints</a> in Bayesian optimization.

% Auto-generated by MATLAB on 10-Feb-2025 19:25:32

if hasVariables(XTable, {'NumLayers'})
    for i = 1:length(XTable.Properties.VariableNames)
        if ~startsWith(XTable.Properties.VariableNames{i},'Layer_')
            continue;
        end
        varNamesplit = strsplit(XTable.Properties.VariableNames{i},'Layer_');
        varNamesplit = strsplit(varNamesplit{2},'_Size');
        layerNumber = str2double(varNamesplit{1});
        XTable.(XTable.Properties.VariableNames{i})(XTable.NumLayers < layerNumber) = NaN;
    end
end
end

function tf = hasVariables(Tbl, VarNames)
% Return true if table Tbl has all variables VarNames.
tf = all(ismember(VarNames, Tbl.Properties.VariableNames));
end